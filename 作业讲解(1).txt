#include<stdio.h>
//void init(int arr[],int sz)//创建一个整形数组，完成对数组的操作
//{                         //实现函数init的初识化实现数组全为0
//	int i=0;              //实现函数print打印每一个数组
//	for(i=0;i<sz;i++)     //实现函数reverse将数组内容倒置
//	{
//		arr[i]=0;
//	}
//}
//void print(int arr[],int sz)
//{
//	int i=0;
//	for(i=0;i<sz;i++)
//	{
//		printf("%d ",arr[i]);
//	}
//}
//void reverse(int arr[],int sz)
//{
//	int left=0;
//	int right=sz-1;
//	while(left<right)
//	{
//		int tmp=arr[left];
//		arr[left]=arr[right];
//		arr[right]=tmp;
//		left++;
//		right--;
//	}
//}
//int main()
//{
//	int arr[10]={1,2,3,4,5,6,7,8,9,10};
//	int sz=sizeof(arr)/sizeof(arr[0]);
//	init(arr,sz);
//	print(arr,sz);
//	reverse(arr,sz);//reverse函数是将数组中十个元素倒过来排
//	return 0;
//
//}



//int main()
//{
//	int arr1[]={1,3,5,7,9};
//	int arr2[]={2,4,6,8,10};
//	int i=0;
//	
//	int sz=sizeof(arr1)/sizeof(arr1[0]);
//	for(i=0;i<sz;i++)
//	{
//		int tmp=0;
//		tmp=arr1[i];
//		arr1[i]=arr2[i];
//		arr2[i]=tmp;
//	}
//	
//	return 0;
//}


//



//int main()
//{
//	int a=0x11223344;//这边int定义，四个字节，每两个数字占一个字节，char是一个字节，所以改了两个数字，又地址在内存中是倒着存放的，所以是44332211，
//	char*p=(char*)&a;//改了44变为00，所以打印出来是11223300
//	*p=0;
//	printf("%x\n",a);
//
//	return 0;
//}


int i;//全局变量初始值为0
//int main()
//{
//	i--;
//	if(i>sizeof(i))//这边i--后i就是-1，sizeof计算变量/类型所占空间大小时变为无符号数，所以-1变为无符号数时最前面有个1，这个数将会是很大的
//	{
//		printf(">\n");
//	}
//	else
//	{
//		printf("<\n");
//	}
//	return 0;
//}




//int main()
//{
//	int a,b,c;
//	a=5;
//	c=++a;//a=6,c=6
//	b=++c,c++,++a,a++;//c=7,a=7,b=7   后面变为c=8,a=8
//	b+=a++ +c;//a=8,c=8,b=16+7=23
//	printf("%d %d %d",a,b,c);//a=9,b=23,c=8
//	return 0;
//}


