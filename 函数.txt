#include<stdio.h>
//#include<string.h>//链式访问的相关概念
//int main()
//{
//	int len=0;
//	len=strlen("abc");
//	printf("%d\n",len);//第一种
//	printf("%d\n",strlen("abc"));//链式访问
//	return 0;
//}





//void Add(int* p)//每调用一次这个函数，num的值就会增加1
//{
//	(*p)++;
//}
//int main()
//{
//	int num=0;
//	
//	Add(&num);
//	printf("num=%d\n",num);
//	Add(&num);
//	printf("num=%d\n",num);
//	Add(&num);
//	printf("num=%d\n",num);
//
//	return 0;
//
//}





//int binary_search(int arr[],int k,int sz)//用函数的方法做二分查找法
//{
//	int left=0;
//	int right=sz-1;
//	while(left<=right)
//	{
//		int mid=(left+right)/2;
//		if(arr[mid]<k)
//		{
//			left=mid+1;
//		}
//		else if(arr[mid]>k)
//		{
//			right=mid-1;
//		}
//		else
//		{
//			return mid;
//		}
//		
//	 }
//	return -1;
//}
//int main()
//{
//	int arr[]={1,2,31,4,54,6,7,85,9,10};
//	int k=85;
//	int sz=sizeof(arr)/sizeof(arr[0]);
//	int ret=binary_search(arr,k,sz);
//	if(ret==-1)
//	{
//		printf("没找到这个数字\n");
//	}
//	else
//	{
//		printf("找到了，这个数字小标为：%d\n",ret);
//	}
//	return 0;
//}




//int is_leap_year(int x)//用函数计算闰年
//{
//	if(x%4==0&&x%100!=0 || x%400==0)
//		return 1;
//	else 
//		return 0;
//}
//int main()
//{
//	int year=0;
//	for(year=1000;year<=2000;year++)
//	{
//		if((is_leap_year(year))==1)
//		{
//			printf("%d ",year);
//		}
//	}
//	return 0;
//}






//int is_prime(int n)//用函数的方法写出判断素数
//{
//	int j=0;
//	for(j=2;j<n;j++)
//	{
//		if(n%j==0)
//		{
//			return 0;
//		}
//			
//
//	}
//	if(n==j)
//		return 1;
//}
//int main()
//{
//	int i=0;
//	for(i=100;i<=200;i++)
//	{
//		if(is_prime(i)==1)
//		{
//			printf("%d ",i);
//		}
//	}
//	return 0;
//}





//void Swap(int*x,int*y)//交换两个数的函数设计
//{
//	int tmp=0;
//	tmp=*x;
//	*x=*y;
//	*y=tmp;
//}
//int main()
//{
//	int a=10;
//	int b=20;
//	Swap(&a,&b);
//	printf("a=%d b=%d",a,b);
//
//	return 0;
//}





//int compare(int x,int y)//自定义函数，自己做了一个函数用于两个数的比较
//{
//	if(x>y)
//		return x;
//	else
//		return y;
//}
//int main()
//{
//	int a=10;
//	int b=20;
//	int max=compare(a,b);
//	printf("最大值为：%d\n",max);
//	return 0;
//}





//int main()//memset的用法
//{
//	char arr[]={"hello bit"};
//	memset(arr,'*',5);
//	printf("%s\n",arr);
//	return 0;
//}




//#include<string.h>
//int main()//strcpy的用法
//{
//	char arr1[]={"bit"};
//	char arr2[]={"##############"};
//	strcpy(arr2,arr1);
//	printf("%s\n",arr2);
//	return 0;
//}





//int Add(int x,int y)//Add函数实现加法
//{
//	int z=0;
//	z=x+y;
//	return z;
//}
//int main()
//{
//	int a =10;
//	int b =20;
//	int sum=Add(a,b);
//	printf("sum=%d\n",sum);
//	return 0;
//}