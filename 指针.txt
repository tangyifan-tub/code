#include<stdio.h>
//int main()//指针类型决定了指针进行解引用操作的时候，能够访问空间的大小
//{
//	int a=0x11223344;
//	//int*p=&a;
//	//*p=0;//这里是将a的值改为0，内存中改为00 00 00 00
//	char*pc= &a;
//	*pc=0;//这里是将内存中前两个值改为0，因为char是1个字节,8个bit，所以内存中就变为00 33 22 11
//	
//	return 0;
//
//}



//int main()//指针类型决定了一步能走多远
//{
//	int a=0;
//	int*p=&a;
//	char*ch=&a;
//	printf("%p\n",p);
//	printf("%p\n",p+1);//int*决定了一步能走4个字节
//	printf("%p\n",ch);
//	printf("%p\n",ch+1);//char*决定了一步能走1个字节
//
//		return 0;
//}



//int main()
//{
//	int arr[10]={0};
//	int *p=arr;
//	int i=0;
//	for(i=0;i<10;i++)//将arr数组中每个0都变为1
//	{
//		*(p+i)=1;
//	}
//	return 0;
//}



//int main()
//{
//	int arr[10]={1,2,3,4,5,6,7,8,9,10};
//	int i=0;
//	int *p=arr;
//	for(i=0;i<10;i++)
//	{
//		printf("%d ",*p);//*p一开始表示的是首元素，p=p+1就是访问下一个元素
//		p=p+1;
//	}
//	return 0;
//}



//int main()
//{
//	int arr[10]={1,2,3,4,5,6,7,8,9,10};
//	int i=0;
//	int *p=&arr[9];
//	for(i=0;i<5;i++)
//	{
//		printf("%d ",*p);//这里就是先将10的地址给p，那么*p访问的就是10，p-2就是访问8，依次循环5次
//		p=p-2;
//	}
//	return 0;
//}



//int main()
//{
//	int arr[10]={1,2,3,4,5,6,7,8,9,10};
//	printf("%d\n",arr[8]-arr[1]);//指针减指针得到的是中间元素的个数
//	return 0;
//}

//int my_strlen(char*str)//用函数的形式算字符长度，原理还是指针减指针等于中间元素的个数
//{
//	char*start=str;
//	char*end=str;
//	while(*end!='\0')
//	{
//		end++;
//	}
//	return end-start;
//}
//int main()
//{
//	char arr[]={"bit"};
//	int len=0;
//	len=my_strlen(arr);
//	printf("%d ",len);
//	
//}


//int main()
//{
//	int arr[10]={0};
//	printf("%p\n",arr);//arr就是等于&arr[0],所以arr就是取数组首元素地址
//	printf("%p\n",&arr[0]);
//	return 0;
//}



//int main()
//{
//	int arr[10]={1,2,3,4,5,6,7,8,9,10};
//	int i=0;
//	int *p=arr;
//	for(i=0;i<10;i++)
//	{
//		printf("%p        %p\n",p+i,&arr[i]);//这里两个地址相同，说明p+i就是第i个的地址
//	}
//	for(i=0;i<10;i++)
//	{
//		printf("%d\n",arr[i]);//可以发现这两个打出来是一样的，所以arr[i]就等于*（p+i）
//		
//		printf("%d\n",*(p+i));
//	}
//	return 0;
//}



//int main()
//{
//	int a=10;
//	int*pa=&a;
//	int**ppa=&pa;//这个ppa就是二级指针
//	return 0;
//}


int main()
{
	int a=10;
	int b=20;
	int c=30;
	int*pa[3]={&a,&b,&c};//这是一个指针数组，存放指针的数组
	int i=0;
	for(i=0;i<3;i++)
	{
		printf("%d ",*pa[i]);
	}

	return 0;
}