#include "game.h"
void Initboard(char board[ROW][COL],int row,int col)//让数组中每个都放‘ ’，这样就是棋盘初始化。
{
	int i=0;
	int j=0;
	for(i=0;i<row;i++)
	{
		for(j=0;j<col;j++)
		{
			board[i][j]=' ';
		}
	}
}

void Displayboard(char board[ROW][COL],int row,int col)
{
	int i=0;
	for(i=0;i<row;i++)
	{
		int j=0;
		for(j=0;j<col;j++)
		{
			printf(" %c ",board[i][j]);//打印出棋盘上的符号
			if(j<col-1)
			printf("|");//分隔符
		}
		printf("\n");
		for(j=0;j<col;j++)
		{
			if(i<row-1)
			{
				printf("---");//分隔符
			    if(j<col-1)
				  printf("|");
			}
		
		}
		
		printf("\n");//每行打完之后都要换行
	}
}

void Playermove(char board[ROW][COL],int row,int col)
{
	int x=0;
	int y=0;
	printf("玩家走\n");
	while(1)
	{
		printf("请输入要下棋的坐标：");
		scanf("%d%d",&x,&y);
		if(x>=1&&x<=row  &&y>=1&&y<=col)//x,y范围在1到row之间是为了习惯玩家思维，但数组下标还是从0开始
		{
			if(board[x-1][y-1]==' ')//所以这边x，y都要减1
			{
				board[x-1][y-1]='*';
				break;
			}
			else
			{
				printf("该空格已被填完，请重填\n");
			}
		}
		else
		{
			printf("非法输入，请重新输入\n");
		}
		
	}
}

void Computermove(char board[ROW][COL],int row,int col)
{
	int x=0;
	int y=0;
	printf("电脑走\n");
	while(1)
	{
		x=rand()%row;//用随机数来确定x，y，让电脑随机下
	    y=rand()%col;
		if(board[x][y]==' ')
		{
			board[x][y]='#';
			break;
		}
	}
}
char Isfull(char board[ROW][COL],int row,int col)//Isfull这个函数返回0表示棋盘没满，继续下，返回1表示棋盘满了，平局。
{
	int i=0;
	int j=0;
	for(i=0;i<row;i++)
	{
		for(j=0;j<col;j++)
		{
			if(board[i][j]==' ')
			{
				return '0';
			}
		}
	}
	return '1';
}
char Iswin(char board[ROW][COL],int row,int col)
{
	int i=0;
	for(i=0;i<row;i++)
	{
		if(board[i][0]==board[i][1]&&board[i][1]==board[i][2]&&board[i][0]!=' ')//一行相同就算赢
		{
			return board[i][0];
		}
		if(board[0][i]==board[1][i]&&board[1][i]==board[2][i]&&board[0][i]!=' ')//一列相同就算赢
			return board[0][i];
	}
	if(board[0][0]==board[1][1]&&board[1][1]==board[2][2]&&board[0][0]!=' ')//斜对角相同
	{
		return board[0][0];
	}
	if(board[2][0]==board[1][1]&&board[1][1]==board[0][2]&&board[2][0]!=' ')//斜对角相同
	{
		return board[2][0];
	}
    if(1==Isfull(board,ROW,COL))//用Isfull这个函数判断棋盘是否下满了
	{
		return 'q';//返回q表示平局
	}
	return 'c';//返回c表示继续
}
