#include<stdio.h>
#include<stdlib.h>

typedef struct Lnode
{
	int data;
	struct Lnode *next;
}Lnode;
Lnode* creat_list()
{
	int i=0;
	int len=0;
	int val;
	Lnode*phead=(Lnode*)malloc(sizeof(Lnode));
	Lnode*ptail=phead;
	ptail->next=NULL;
	printf("请输入链表长度：");
	scanf("%d",&len);
	for(i=0;i<len;++i)
	{
		Lnode*pnew=(Lnode*)malloc(sizeof(Lnode));
		printf("请输入要填入的值：");
		scanf("%d",&val);
		pnew->data=val;
		ptail->next=pnew;
		pnew->next=NULL;
		ptail=pnew;

	}
	return phead;
}
void show_list(Lnode* phead)
{
	Lnode*p=phead->next;
	while(p!=NULL)
	{
		printf("%d ",p->data);
		p=p->next;
	}
	printf("\n");
}
int count_length(Lnode*phead)
{
	int count=0;
	Lnode*p=phead->next;
	while(p!=NULL)
	{
		count++;
		p=p->next;
	}
	return count;
}
void sort_list(Lnode*phead)
{
	int i=0;
	int j=0;
	int len =count_length(phead);
	Lnode*p=phead->next;
	Lnode*q=p->next;
	for(i=0;i<len-1;i++,p=p->next)
	{
		for(j=0,q=p->next;j<len-1-i;j++,q=q->next)
		{
			if(p->data>q->data)
			{
				int tmp=p->data;
				p->data=q->data;
				q->data=tmp;

			}

		}
	}

}

void insert_list(Lnode*phead,int pos,int val)
{
	int i=0;
	Lnode*p=phead;
	Lnode*q;
	Lnode*pnew;
	while(p!=NULL&&i<pos)
	{
		p=p->next;
		i++;
	}
	if(i>pos||p==NULL)
	{
		printf("false");
	}
	pnew=(Lnode*)malloc(sizeof(Lnode));
	if(pnew==NULL)
	{
		printf("开辟空间失败");
	}
	pnew->data=val;
	q=p->next;
	p->next=pnew;
	pnew->next=q;
	
}


//void delete_list(Lnode*phead,int pos ,int* val)
//{
//	int i=0;
//	Lnode*q;
//	Lnode*p=phead;
//	while(p->next!=NULL&&i<pos-1)
//	{
//		p=p->next;
//		i++;
//	}
//	if(i>pos-1||p->next==NULL)
//	{
//		printf("flase");
//	}
//	q=p->next;
//	*val=q->data;
//	p->next=p->next->next;
//	free(q);
//	q=NULL;
//	
//
//
//}
int main()
{

	int val;
	int ret;
	
	Lnode*phead=NULL;
	phead=creat_list();
	show_list(phead);
	
	insert_list(phead,3,4);
	/*delete_list(phead,2,&val);
	printf("删除的数据为：%d\n",val);*/
	
	/*sort_list(phead);*/
	
	show_list(phead);
	return 0;
}


