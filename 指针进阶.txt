#include<stdio.h>
//int main()
//{
//	int arr1[]={1,2,3,4,5};
//	int arr2[]={2,3,4,5,6};
//	int arr3[]={3,4,5,6,7};
//	int *parr[]={arr1,arr2,arr3};
//	int i=0;
//	for(i=0;i<3;i++)
//	{
//		int j=0;
//		for(j=0;j<4;j++)
//		{
//			printf("%d ",*(parr[i]+j));
//		}
//		
//		printf("\n");
//	}
//	return 0;
//}






//arr--首元素的地址
//&arr[0]--首元素的地址
//&arr--数组的地址
//int main()
//{
//	int arr[10]={1,2,3,4,5,6,7,8,9,10};
//	int (*p)[10]=&arr;
//	int i=0;
//	for(i=0;i<10;i++)
//	{
//		printf("%d ",(*p)[i]);
//	}
//	return 0;
//}






//void print(int arr[3][5],int x,int y)
//{
//	int i=0;
//	int j=0;
//	for(i=0;i<x;i++)
//	{
//		for(j=0;j<y;j++)
//		{
//			printf("%d ",arr[i][j]);
//		}
//		printf("\n");
//	}
//}
//int main()
//{
//	int arr[3][5]={{1,2,3,4,5},{2,3,4,5,6},{3,4,5,6,7}};
//	print(arr,3,5);
//	return 0;
//}






//void print(int (*p)[5],int x,int y)
//{
//	int i=0;
//	for(i=0;i<x;i++)
//	{
//		int j=0;
//		for(j=0;j<y;j++)
//		{
//			printf("%d ",*((*p+i)+j));
//		}
//		printf("\n");
//	}
//	
//}
//int main()
//{
//	int arr[3][5]={{1,2,3,4,5},{2,3,4,5,6},{3,4,5,6,7}};
//	print(arr,3,5);//arr传过去的也可以是首元素地址，这里首元素是第一个数组
//	return 0;
//}





//函数指针
//int Add(int x,int y)
//{
//	return x+y;
//}
//int main()
//{
//	int ret=0;
//	int (*p)(int, int)=&Add;
//	ret=(*p)(3,5);
//	printf("%d\n",ret);
//	return 0;
//}







//void print(char*str)
//{
//	printf("%s ",str);
//}
//int main()
//{
//	void (*p)(char*)=&print;
//	(*p)("hello");
//	return 0;
//}





//用普通方法来解
//int add(int x,int y)
//{
//	return x+y;
//}
//int sub(int x,int y)
//{
//	return x-y;
//}
//int mul(int x,int y)
//{
//	return x*y;
//}
//int div(int x,int y)
//{
//	return x/y;
//}
//void menu()
//{
//	printf("****************************\n");
//	printf("****1.0 add   2.0 sub  *****\n");
//	printf("****3.0 mul   4.0 div  *****\n");
//	printf("*********0.0 exit  *********\n");
//}
//int main()
//{
//	int input=0;
//	int x=0;
//	int y=0;
//	
//	do
//	{
//		menu();
//		printf("请选择：");
//		scanf("%d",&input);
//		printf("请输入两个数字:");
//		scanf("%d%d",&x,&y);
//		switch(input)
//		{
//		case 1:
//			printf("%d \n",add(x,y));
//			break;
//		case 2:
//			printf("%d\n ",sub(x,y));
//			break;
//		case 3:
//			printf("%d \n",mul(x,y));
//			break;
//		case 4:
//			printf("%d\n ",div(x,y));
//			break;
//		case 0:
//			printf("退出程序\n");
//			break;
//		default :
//			printf("输入错误\n");
//			break;
//		}
//
//	}while(input);
//	return 0;
//}







//用函数指针数组来解
//int add(int x,int y)
//{
//	return x+y;
//}
//int sub(int x,int y)
//{
//	return x-y;
//}
//int mul(int x,int y)
//{
//	return x*y;
//}
//int div(int x,int y)
//{
//	return x/y;
//}
//void menu()
//{
//	printf("****************************\n");
//	printf("****1.0 add   2.0 sub  *****\n");
//	printf("****3.0 mul   4.0 div  *****\n");
//	printf("*********0.0 exit  *********\n");
//}
//int main()
//{
//	int input=0;
//	int x=0;
//	int y=0;
//	int ret=0;
//	int (*pfarr[5])(int, int )={0,add,sub,mul,div};//函数指针数组
//	do
//	{
//		menu();
//		printf("请选择：");
//		scanf("%d",&input);
//		if(input>=1&&input<=4)
//		{
//			printf("请输入两个数：");
//			scanf("%d%d",&x,&y);
//			ret=pfarr[input](x,y);
//			printf("%d\n",ret);
//		}
//		else if(input==0)
//		{
//			printf("退出程序\n");
//		}
//		else
//		{
//			printf("请重新输入\n");
//		}
//		
//		
//
//	}while(input);
//	return 0;
//}






//冒泡排序
//void bubble_sort(int arr[],int sz)
//{
//	int i=0;
//	for(i=0;i<sz-1;i++)
//	{
//		int j=0;
//		for(j=0;j<sz-1-i;j++)
//		{
//			if(arr[j]>arr[j+1])
//			{
//				int tmp=arr[j];
//			    arr[j]=arr[j+1];
//			    arr[j+1]=tmp;
//			}
//		}
//	}
//}
//int main()
//{
//	int arr[10]={9,8,7,6,5,4,3,2,1,0};
//	int sz=sizeof(arr)/sizeof(arr[0]);
//	int i=0;
//	bubble_sort(arr,sz);
//	for(i=0;i<sz;i++)
//	{
//		printf("%d ",arr[i]);
//	}
//	return 0;
//}





//运用qsort这个函数去进行冒泡排序
//#include<stdlib.h>
//int cmp_int(const void*e1,const void*e2)
//{
//	return (*(int*)e1)-(*(int*)e2);
//}
//int main()
//{
//	int arr[10]={9,8,7,6,5,4,3,2,1,0};
//	int sz=sizeof(arr)/sizeof(arr[0]);
//	int i=0;
//	qsort(arr,sz,sizeof(arr[0]),cmp_int);
//	for(i=0;i<sz;i++)
//	{
//		printf("%d ",arr[i]);
//	}
//	return 0;
//}




//#include<stdlib.h>
//int cmp_int(const void*e1,const void*e2)
//{
//	return ((*(int*)e1)-(*(int*)e2));
//}
//int main()
//{
//	int arr[]={9,8,7,6,5,4,3,2,1,0};
//	int sz=sizeof(arr)/sizeof(arr[0]);
//	int i=0;
//	qsort(arr,sz,sizeof(arr[0]),cmp_int);
//	for(i=0;i<sz;i++)
//	{
//		printf("%d",arr[i]);
//	}
//	return 0;
//}